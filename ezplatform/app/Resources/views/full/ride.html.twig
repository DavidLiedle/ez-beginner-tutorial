{% extends "pagelayout.html.twig" %}

{% block content %}


  <section class="">
    <div class="container">
      <div class="row regular-content-size">
        <div class="col-xs-10 col-xs-offset-1 row-padding">

          <div class="col-xs-12">
            <div class="col-xs-1 text-left">
              <h2>Ride:</h2>
            </div>
            <div class="col-xs-11 text-left">
              <h2 class="extra-padding-left">{{ ez_content_name( content ) }}</h2>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section>
    <div class="container">
      <div class="row regular-content-size">
        <div class="col-xs-10 col-xs-offset-1">
          <div id="map-container"><p
              class="strong">{{ ez_render_field(content, 'starting_point', {'parameters': {'width': '80%', 'height': '330px', 'showMap': true, 'showInfo': false }}
              ) }}
            </p></div>
        </div>
      </div>
    </div>
  </section>
  <section class="">
    <div class="container">
      <div class="row regular-content-size">
        <div class="col-xs-10 col-xs-offset-1 padding-box">
          <div class="col-xs-2">
            <div class="box-ride">
              <h3 class="special-number">{{ ez_render_field( content, 'length') }} Km</h3>

              <p class="pre-small special-number special-number-margin"><strong>{{ 'Level' | trans }}</strong></p>

              <p class="text-center">
                <i class="fa fa-star star-color"></i>
                <i class="fa fa-star star-color"></i>
                <i class="fa fa-star star-color"></i>
              </p>
            </div>
          </div>
          <div class="col-xs-10">
            <div class="col-xs-5">

              <p>Created by: {{ ez_field_value( content, 'author') }}</p>

              <p>Start: {{ ez_field_value(content, 'starting_point') }}
              </p>

              <p>End: {{ ez_field_value(content, 'ending_point') }}</p>
            </div>
          </div>


        </div>
        <div class="col-xs-10 col-xs-offset-1 padding-box">
          <div class="col-xs-10">
            <div class="col-xs-2 text-right">
              <p>Description:</p>
            </div>
            <div class="col-xs-10 text-justify">
              {{ ez_render_field( content, 'description') }}
            </div>
          </div>

        </div>

      </div>

    </div>
  </section>



  {# Displaying Points of interest, injected via RideController.php, viewRideWithPOIAction function #}
  {% for point in pointOfInterestList %}
    {% if loop.first %}
      <section class="photos">
      <div class="container">
      <div class="row regular-content-size">
      <div class="col-xs-10 col-xs-offset-1" id="wrapper">
      <div class="col-xs-12">
        <h4 class="underscore-green">Points of interest:</h4>
      </div>
    {% endif %}

    {{ render( controller( "ez_content:viewLocation", { 'locationId': point.contentInfo.mainLocationId, 'viewType': 'line'} )) }}

    {% if loop.last %}
      </div>
      </div>
      </div>
      </section>
    {% endif %}
  {% endfor %}
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script>
    // Define your locations: HTML content for the info window, latitude & longitude
    var locations = [
      [ '<p class="infowindow-text">Start!</p>', "{{ ez_field_value(content, "starting_point").latitude}}", "{{ ez_field_value(content, "starting_point").longitude }}", 'orange-dot.png']
      {% for point in pointOfInterestList %}
      ,
      ['<p><span>{{ ez_render_field( point, 'photo', { parameters: { 'alias': 'small' }}) }}</span></p>', '{{ ez_field_value( point, "place").latitude}}', '{{ ez_field_value( point, "place").longitude }}', 'green-dot.png']
      {% endfor %}
      ,
      [ '<p class="infowindow-text">End!</p>', "{{ ez_field_value(content, "ending_point").latitude}}", "{{ ez_field_value(content, "ending_point").longitude }}", 'blue-dot.png']
    ];

    var iconURLPrefix = 'http://maps.google.com/mapfiles/ms/icons/';

    var map = new google.maps.Map(document.getElementById('map-container'), {
      zoom: 8,
      center: new google.maps.LatLng("{{ ez_field_value(content, "starting_point").latitude}}", "{{ ez_field_value(content, "ending_point").latitude}}"),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: false,
      streetViewControl: false,
      panControl: false,
      zoomControlOptions: {
        position: google.maps.ControlPosition.LEFT_BOTTOM
      }
    });

    var bikeLayer = new google.maps.BicyclingLayer();
    bikeLayer.setMap(map);

    var infowindow = new google.maps.InfoWindow({
                                                  maxWidth: 200
                                                });

    var markers = [];

    var iconCounter = 0;

    // Add the markers and infowindows to the map
    for (
      var i = 0; i < locations.length; i++
      )
    {
      var marker = new google.maps.Marker({
                                            position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                                            map: map,
                                            icon: iconURLPrefix + locations[i][3]
                                          });

      markers.push(marker);

      google.maps.event.addListener(marker, 'mouseover', (function (marker, i)
      {
        return function ()
        {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }

    function autoCenter()
    {
      //  Create a new viewpoint bound
      var bounds = new google.maps.LatLngBounds();
      //  Go through each...
      for (
        var i = 0; i < markers.length; i++
        )
      {
        bounds.extend(markers[i].position);
      }
      //  Fit these bounds to the map
      map.fitBounds(bounds);
    }
    autoCenter();
  </script>
{% endblock %}